package main

import (
	"fmt"
	"log"
	"time"

	"github.com/initialed85/mqtt_things/pkg/broadlink_client"
)

func main() {
	_ = fmt.Printf

	c, err := broadlink_client.NewClient()
	if err != nil {
		log.Fatal(err)
	}
	defer func() {
		_ = c.Close()
	}()

	devices, err := c.Discover(time.Second * 2)
	if err != nil {
		log.Fatal(err)
	}

	for _, device := range devices {
		log.Printf("discovered: %v, %v, %v", device.Name, device.MAC, device.Addr.String())

		err = device.Auth(time.Second * 2)
		if err != nil {
			log.Fatal(err)
		}

		log.Printf("authenticated.")

		sensorData, err := device.GetSensorData(time.Second * 2)
		if err != nil {
			log.Fatal(err)
		}

		log.Printf("sensors: %#+v", sensorData)

		// err = device.SendIR([]byte{0x26, 0x0, 0x76, 0x0, 0x6f, 0x31, 0xf, 0xc, 0xe, 0xd, 0xe, 0x27, 0xe, 0xd, 0xe, 0x27, 0xf, 0xc, 0xe, 0xd, 0xe, 0xc, 0xf, 0x27, 0xe, 0x27, 0xf, 0xc, 0xe, 0xd, 0xe, 0xc, 0xf, 0x27, 0xe, 0x27, 0xf, 0xc, 0xe, 0xd, 0xe, 0xe, 0xd, 0xc, 0xf, 0xc, 0xe, 0xd, 0xe, 0xc, 0xf, 0xc, 0xe, 0xd, 0xe, 0xc, 0xf, 0xc, 0xf, 0xc, 0xe, 0xd, 0xe, 0x27, 0xe, 0xd, 0xe, 0xc, 0xf, 0xc, 0xf, 0xc, 0xe, 0xd, 0xe, 0xc, 0xf, 0xc, 0xf, 0x26, 0xf, 0xc, 0xf, 0xc, 0xe, 0xd, 0xe, 0xc, 0xf, 0x27, 0xe, 0xd, 0xe, 0xc, 0xf, 0xc, 0xe, 0xd, 0xe, 0xd, 0xe, 0xc, 0xf, 0x27, 0xe, 0xc, 0xf, 0x27, 0xe, 0x27, 0xf, 0x27, 0xe, 0x27, 0xf, 0x27, 0xe, 0x27, 0xe, 0x0, 0xd, 0x5}, time.Second*1)
		// if err != nil {
		// 	log.Fatal(err)
		// }

		// if device.MAC.String() == "0b:ae:0c:ad:c1" {

		// 	log.Printf("alright, start punching buttons...")

		// 	lastCode := make([]byte, 0)
		// 	for i := 18; i <= 30; i++ {
		// 		var code []byte

		// 	retry:
		// 		for {
		// 			code, err = device.Learn(time.Second * 60)
		// 			if err != nil {
		// 				log.Fatal(err)
		// 			}

		// 			if len(lastCode) != 0 && len(code) < len(lastCode) {
		// 				continue
		// 			}

		// 			lastCode = code

		// 			break retry
		// 		}

		// 		fmt.Printf("\"heat_%v\": %#+v,\n", i, code)
		// 	}
		// }
	}
}
